---
interface Props {
	letter: string,
	word: string,
	hiddenImage: boolean,
	imageSrc: string,
	imageAlt: string,
	imagePosition: string,
	audioSrc: string,
}

const { letter, word, hiddenImage, imageSrc, imageAlt, imagePosition, audioSrc } = Astro.props;

import { Image } from 'astro:assets'
---

<div class="letter-card" data-audio={audioSrc}>
	<h2>{letter}</h2>
	<p>{word}</p>
	<Image class={hiddenImage ? "hidden" : imagePosition}} src={imageSrc} alt={imageAlt} height="56" width="56"/>
</div>
<style>
	.letter-card {
		display: flex;
		flex-direction: column;
		align-items: center;
		position: relative;
	}

	.letter-card > h2 {
		margin: 0;
		font-size: 6dvh;
		line-height: 115%;
		cursor: pointer;
		z-index: 2;
	}
	.letter-card > p {
		margin: 0;
		cursor: pointer;
		z-index: 2;
	}

	.letter-card > img {
		position: absolute;
		z-index: 1;
	}

	.letter-card >img.topRight {
		top: -16px;
		right: -16px;
	}

	.letter-card >img.hidden {
		display: none;
	}

	.letter-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
	}
	.letter-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}
</style>
<script>
	const cards = document.querySelectorAll(".letter-card");
	cards?.forEach((card) => {
		let letterAudio = new Audio(card.dataset.audio);
		card.addEventListener("click", function(){
			if (letterAudio.paused) {
				letterAudio.play()
			}
		}) 
	})
</script>